import{S as h,i as c}from"./assets/vendor-5ObWk2rO.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const i of t.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&a(i)}).observe(document,{childList:!0,subtree:!0});function o(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function a(e){if(e.ep)return;e.ep=!0;const t=o(e);fetch(e.href,t)}})();function p(r){return r.map(({id:s,webformatURL:o,largeImageURL:a,tags:e,likes:t,views:i,comments:u,downloads:d})=>`<li data-id="${s}" class="gallery-item">
            <a href=${a} class="gallery-link">
            <img src=${o} class="gallery-image" alt=${e}> 
            <div class="wrap"><h2 class="title-like">Likes <span class="span-text"> ${t} </span></h2>
             <h2 class="title-views">Views <span class="span-text"> ${i} </span></h2>
             <h2 class="title-comments">Comments <span class="span-text">${u}</span> </h2>
             <h2 class="title-downloads">Downloads <span class="span-text">${d} </span></h2></div>
</a>
            </li>`).join("")}const m=document.querySelector(".feedback-form"),f=document.querySelector(".gallery");let n=document.querySelector(".loader");const g="47413156-c8c9abea8f6d88937b7892740";let l;const y=new h(".gallery a",{captionDelay:250,captionsData:"alt"});m.addEventListener("submit",L);function L(r){n.classList.add("is-hidden"),r.preventDefault(),l=r.currentTarget.elements.photo.value.trim(),s(`${l}`),r.target.reset();function s(o=""){if(o===""){c.show({color:"red",position:"topRight",message:"Sorry, there are no images matching your search query. Please try again!"}),n.classList.remove("is-hidden");return}const a=new URLSearchParams({key:g,q:`${l}`,image_type:"photo",orientation:"horizontal",safesearch:"true"});fetch(`https://pixabay.com/api/?${a}`).then(e=>{if(!e.ok)throw new Error(e.statusText);return e.json()}).then(e=>{if(!e.hits.length){c.show({color:"red",position:"topRight",message:"Sorry, there are no images matching your search query. Please try again!"}),n.classList.remove("is-hidden");return}f.insertAdjacentHTML("afterbegin",p(e.hits)),y.refresh(),n.classList.remove("is-hidden")}).catch(e=>{console.log(e)}).finally(()=>console.log("ok"))}}
//# sourceMappingURL=index.js.map
